#levels(data_pop$title_abbrev) <- title_abbrev
### temperature
title_temp_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.228)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.046)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.035)", sep="")),
expression(paste(italic("G. siphonifera")," *** (",R^2,"= 0.220)", sep="")),
expression(paste(italic("N. pachyderma")," *** (",R^2,"= 0.440)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.039)", sep="")),
expression(paste(italic("P. obliquiloculata")," ** (",R^2,"= 0.236)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.019)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.003)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.001)", sep=""))
)
size_tmn_all <- ggplot(data_pop, aes(x=tmn_0m, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_temp_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = expression("Sea surface temperature annual mean ("*~degree*"C)")) +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 14),
legend.title = element_text(size=14, face="bold"), legend.position = c(.21, .7),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
### abundance
title_abund_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.126)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.092)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.055)", sep="")),
expression(paste(italic("G. siphonifera")," (",R^2,"= 0.005)", sep="")),
expression(paste(italic("N. pachyderma")," ** (",R^2,"= 0.373)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.013)", sep="")),
expression(paste(italic("P. obliquiloculata")," (",R^2,"= 0.098)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.032)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.060)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.009)", sep=""))
)
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2))
pdf(file = "output/size_all.pdf", paper = "special", width=18, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
dev.off()
dev.off()
pdf(file = "output/size_all.pdf", paper = "special", width=18, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
get.wd()
getwd()
pdf(file = "output/size_all.pdf", paper = "special", width=18, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
rm(list=ls())
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./size-distrib-forams/analysis")
# Libraries
source("R/library.R")
# Auxiliary functions and strings
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
distance = 300000 # distance, in meters, to find neighbours in ForCenS (reltive abundance) database.
# function find_neighbours.R that uses distGeo{geosphere}
# If distance == 0, finds nearest neighbour.
# If distance == 300000, finds all neighbours within 300km distance (radius) from given coordinate (sample).
############
### Data ###
############
buckley_table <- read.csv("data/BuckleyCollection_DataPortal.csv", header = T) # Downloaded from NHM Data Portal
forcens <- read.csv("data/relative_abundance/ForCenS_woa.csv", header = TRUE) # Downloaded from ForCenS Pangea (Siccha & Kucera 2017)
resample_info <- read.csv("data/resample_info.csv", header = T) # Created by Marina Rillo
traps_meta <- read.csv("data/sediment_traps/traps_metadata.csv", header = TRUE) # From Lukas Jonkers (ref. Jonkers & Kucera 2015 Biogeosciences)
ssp_table <- read.csv("data/ssp_all.csv", header = TRUE, stringsAsFactors = FALSE) # Created by Marina Rillo
# Merging samples info from Buckley Collection to morphometric measurements
data <- merge_morpho_measuremts(buckley_table, species_names, overwrite = F)
# Adding temperature to dataset (WOA2013 data from 1955-1964)
data <- merge_morpho_woa(data, overwrite = F) # if R error: see README file
# Merging dataset with ForCenS data (relative abundance), considering neighbours within 'distance' circle
forcens_species <- subset_forcens_species(species_names, forcens, overwrite = F) # uses ForCenS_woa.csv
forcens_subset <- subset_forcens_coord(data, forcens_species, species_names, distance, overwrite = F) # subsetting ForCenS neighbours
data <- merge_morpho_forcens(data, forcens_subset, species_names, distance, overwrite = F) # merging Â§datasets
# Re-ordering the factors (species) to be phylogenetically meaninful in the plot (i.e. sister species closer in the plot)
data$species <- factor(data$species, levels = c("sacculifer","ruber","conglobatus","siphonifera","pachyderma","dutertrei","obliquiloculata","menardii","truncatulinoides", "inflata"))
# Getting populational parameters (ignoring individual measurements)
data_pop <- unique(data[,which(colnames(data)%!in% c("ind_diam", "ind_asp_ratio","ind_area", "ind_area_mm","ind_area_sqrt","ind_area_log"))])
data_pop <- data_pop[-which(data_pop$species == "pachyderma"),]
data_pop$species
### temperature
title_temp_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.228)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.046)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.035)", sep="")),
expression(paste(italic("G. siphonifera")," *** (",R^2,"= 0.220)", sep="")),
expression(paste(italic("N. pachyderma")," *** (",R^2,"= 0.440)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.039)", sep="")),
expression(paste(italic("P. obliquiloculata")," ** (",R^2,"= 0.236)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.019)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.003)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.001)", sep=""))
)
size_tmn_all <- ggplot(data_pop, aes(x=tmn_0m, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_temp_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = expression("Sea surface temperature annual mean ("*~degree*"C)")) +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 14),
legend.title = element_text(size=14, face="bold"), legend.position = c(.21, .7),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
### abundance
title_abund_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.126)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.092)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.055)", sep="")),
expression(paste(italic("G. siphonifera")," (",R^2,"= 0.005)", sep="")),
expression(paste(italic("N. pachyderma")," ** (",R^2,"= 0.373)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.013)", sep="")),
expression(paste(italic("P. obliquiloculata")," (",R^2,"= 0.098)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.032)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.060)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.009)", sep=""))
)
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2))
pdf(file = "output/size_all.pdf", paper = "special", width=18, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
### temperature
title_temp_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.228)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.046)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.035)", sep="")),
expression(paste(italic("G. siphonifera")," *** (",R^2,"= 0.220)", sep="")),
expression(paste(italic("N. pachyderma")," *** (",R^2,"= 0.440)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.039)", sep="")),
expression(paste(italic("P. obliquiloculata")," ** (",R^2,"= 0.236)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.019)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.003)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.001)", sep=""))
)
size_tmn_all <- ggplot(data_pop, aes(x=tmn_0m, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_temp_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = expression("Sea surface temperature annual mean ("*~degree*"C)")) +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 14),
legend.title = element_text(size=14, face="bold"), legend.position = c(.21, .7),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
### abundance
title_abund_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.126)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.092)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.055)", sep="")),
expression(paste(italic("G. siphonifera")," (",R^2,"= 0.005)", sep="")),
expression(paste(italic("N. pachyderma")," ** (",R^2,"= 0.373)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.013)", sep="")),
expression(paste(italic("P. obliquiloculata")," (",R^2,"= 0.098)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.032)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.060)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.009)", sep=""))
)
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2))
pdf(file = "output/size_all.pdf", paper = "special", width=18, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
#geom_point(size = 3, position = "jitter") +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2))
size_abund_all
rm(list=ls())
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./size-distrib-forams/analysis")
# Libraries
source("R/library.R")
# Auxiliary functions and strings
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
distance = 300000 # distance, in meters, to find neighbours in ForCenS (reltive abundance) database.
# function find_neighbours.R that uses distGeo{geosphere}
# If distance == 0, finds nearest neighbour.
# If distance == 300000, finds all neighbours within 300km distance (radius) from given coordinate (sample).
############
### Data ###
############
buckley_table <- read.csv("data/BuckleyCollection_DataPortal.csv", header = T) # Downloaded from NHM Data Portal
forcens <- read.csv("data/relative_abundance/ForCenS_woa.csv", header = TRUE) # Downloaded from ForCenS Pangea (Siccha & Kucera 2017)
resample_info <- read.csv("data/resample_info.csv", header = T) # Created by Marina Rillo
traps_meta <- read.csv("data/sediment_traps/traps_metadata.csv", header = TRUE) # From Lukas Jonkers (ref. Jonkers & Kucera 2015 Biogeosciences)
ssp_table <- read.csv("data/ssp_all.csv", header = TRUE, stringsAsFactors = FALSE) # Created by Marina Rillo
# Merging samples info from Buckley Collection to morphometric measurements
data <- merge_morpho_measuremts(buckley_table, species_names, overwrite = F)
# Adding temperature to dataset (WOA2013 data from 1955-1964)
data <- merge_morpho_woa(data, overwrite = F) # if R error: see README file
# Merging dataset with ForCenS data (relative abundance), considering neighbours within 'distance' circle
forcens_species <- subset_forcens_species(species_names, forcens, overwrite = F) # uses ForCenS_woa.csv
forcens_subset <- subset_forcens_coord(data, forcens_species, species_names, distance, overwrite = F) # subsetting ForCenS neighbours
data <- merge_morpho_forcens(data, forcens_subset, species_names, distance, overwrite = F) # merging Â§datasets
data <- data[-which(data$species == "pachyderma"),]
data$species <- factor(data$species)
levels(data$species)
data$species <- factor(data$species, levels = c("sacculifer","ruber","conglobatus","siphonifera","dutertrei","obliquiloculata","menardii","truncatulinoides", "inflata"))
# Getting populational parameters (ignoring individual measurements)
data_pop <- unique(data[,which(colnames(data)%!in% c("ind_diam", "ind_asp_ratio","ind_area", "ind_area_mm","ind_area_sqrt","ind_area_log"))])
rm(list=ls())
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./size-distrib-forams/analysis")
# Libraries
source("R/library.R")
# Auxiliary functions and strings
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
distance = 300000 # distance, in meters, to find neighbours in ForCenS (reltive abundance) database.
# function find_neighbours.R that uses distGeo{geosphere}
# If distance == 0, finds nearest neighbour.
# If distance == 300000, finds all neighbours within 300km distance (radius) from given coordinate (sample).
############
### Data ###
############
buckley_table <- read.csv("data/BuckleyCollection_DataPortal.csv", header = T) # Downloaded from NHM Data Portal
forcens <- read.csv("data/relative_abundance/ForCenS_woa.csv", header = TRUE) # Downloaded from ForCenS Pangea (Siccha & Kucera 2017)
resample_info <- read.csv("data/resample_info.csv", header = T) # Created by Marina Rillo
traps_meta <- read.csv("data/sediment_traps/traps_metadata.csv", header = TRUE) # From Lukas Jonkers (ref. Jonkers & Kucera 2015 Biogeosciences)
ssp_table <- read.csv("data/ssp_all.csv", header = TRUE, stringsAsFactors = FALSE) # Created by Marina Rillo
# Merging samples info from Buckley Collection to morphometric measurements
data <- merge_morpho_measuremts(buckley_table, species_names, overwrite = F)
# Adding temperature to dataset (WOA2013 data from 1955-1964)
data <- merge_morpho_woa(data, overwrite = F) # if R error: see README file
# Merging dataset with ForCenS data (relative abundance), considering neighbours within 'distance' circle
forcens_species <- subset_forcens_species(species_names, forcens, overwrite = F) # uses ForCenS_woa.csv
forcens_subset <- subset_forcens_coord(data, forcens_species, species_names, distance, overwrite = F) # subsetting ForCenS neighbours
data <- merge_morpho_forcens(data, forcens_subset, species_names, distance, overwrite = F) # merging Â§datasets
data <- data[-which(data$species == "pachyderma"),]
data$species <- factor(data$species)
levels(data$species)
# Re-ordering the factors (species) to be phylogenetically meaningful in the plot (i.e. sister species closer in the plot)
# (with pachyderma) data$species <- factor(data$species, levels = c("sacculifer","ruber","conglobatus","siphonifera","pachyderma","dutertrei","obliquiloculata","menardii","truncatulinoides", "inflata"))
data$species <- factor(data$species, levels = c("sacculifer","ruber","conglobatus","siphonifera","dutertrei","obliquiloculata","menardii","truncatulinoides", "inflata"))
# Getting populational parameters (ignoring individual measurements)
data_pop <- unique(data[,which(colnames(data)%!in% c("ind_diam", "ind_asp_ratio","ind_area", "ind_area_mm","ind_area_sqrt","ind_area_log"))])
overwrite=TRUE
dev.off()
dev.off()
if (!file.exists("output/size_abund_sst.pdf") | overwrite == TRUE){
# data_no0 <- data[-which(data$rel_abund == 0),]
### temperature
title_temp_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.228)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.046)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.035)", sep="")),
expression(paste(italic("G. siphonifera")," *** (",R^2,"= 0.220)", sep="")),
#expression(paste(italic("N. pachyderma")," *** (",R^2,"= 0.440)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.039)", sep="")),
expression(paste(italic("P. obliquiloculata")," ** (",R^2,"= 0.236)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.019)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.003)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.001)", sep=""))
)
size_tmn_all <- ggplot(data_pop, aes(x=tmn_0m, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
geom_point(size = 3, position = "jitter") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_temp_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = expression("Sea surface temperature annual mean ("*~degree*"C)")) +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20),
legend.title = element_text(size=20, face="bold"), legend.position = c(.2, .75),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
### abundance
title_abund_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.126)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.092)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.055)", sep="")),
expression(paste(italic("G. siphonifera")," (",R^2,"= 0.005)", sep="")),
#expression(paste(italic("N. pachyderma")," ** (",R^2,"= 0.373)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.013)", sep="")),
expression(paste(italic("P. obliquiloculata")," (",R^2,"= 0.098)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.032)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.060)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.009)", sep=""))
)
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
geom_point(size = 3, position = "jitter") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2))
pdf(file = "output/size_all.pdf", paper = "special", width=16, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
} # if
rm(list=ls())
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./size-distrib-forams/analysis")
# Libraries
source("R/library.R")
# Auxiliary functions and strings
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
distance = 300000 # distance, in meters, to find neighbours in ForCenS (reltive abundance) database.
# function find_neighbours.R that uses distGeo{geosphere}
# If distance == 0, finds nearest neighbour.
# If distance == 300000, finds all neighbours within 300km distance (radius) from given coordinate (sample).
############
### Data ###
############
buckley_table <- read.csv("data/BuckleyCollection_DataPortal.csv", header = T) # Downloaded from NHM Data Portal
forcens <- read.csv("data/relative_abundance/ForCenS_woa.csv", header = TRUE) # Downloaded from ForCenS Pangea (Siccha & Kucera 2017)
resample_info <- read.csv("data/resample_info.csv", header = T) # Created by Marina Rillo
traps_meta <- read.csv("data/sediment_traps/traps_metadata.csv", header = TRUE) # From Lukas Jonkers (ref. Jonkers & Kucera 2015 Biogeosciences)
ssp_table <- read.csv("data/ssp_all.csv", header = TRUE, stringsAsFactors = FALSE) # Created by Marina Rillo
# Merging samples info from Buckley Collection to morphometric measurements
data <- merge_morpho_measuremts(buckley_table, species_names, overwrite = F)
# Adding temperature to dataset (WOA2013 data from 1955-1964)
data <- merge_morpho_woa(data, overwrite = F) # if R error: see README file
# Merging dataset with ForCenS data (relative abundance), considering neighbours within 'distance' circle
forcens_species <- subset_forcens_species(species_names, forcens, overwrite = F) # uses ForCenS_woa.csv
forcens_subset <- subset_forcens_coord(data, forcens_species, species_names, distance, overwrite = F) # subsetting ForCenS neighbours
data <- merge_morpho_forcens(data, forcens_subset, species_names, distance, overwrite = F) # merging Â§datasets
# Removing pachyderma from analysis :-(
data <- data[-which(data$species == "pachyderma"),]
data$species <- factor(data$species)
levels(data$species)
# Re-ordering the factors (species) to be phylogenetically meaningful in the plot (i.e. sister species closer in the plot)
# (with pachyderma) data$species <- factor(data$species, levels = c("sacculifer","ruber","conglobatus","siphonifera","pachyderma","dutertrei","obliquiloculata","menardii","truncatulinoides", "inflata"))
data$species <- factor(data$species, levels = c("sacculifer","ruber","conglobatus","siphonifera","dutertrei","obliquiloculata","menardii","truncatulinoides", "inflata"))
# Getting populational parameters (ignoring individual measurements)
data_pop <- unique(data[,which(colnames(data)%!in% c("ind_diam", "ind_asp_ratio","ind_area", "ind_area_mm","ind_area_sqrt","ind_area_log"))])
if (!file.exists("output/size_abund_sst.pdf") | overwrite == TRUE){
# data_no0 <- data[-which(data$rel_abund == 0),]
### temperature
title_temp_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.228)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.046)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.035)", sep="")),
expression(paste(italic("G. siphonifera")," *** (",R^2,"= 0.220)", sep="")),
#expression(paste(italic("N. pachyderma")," *** (",R^2,"= 0.440)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.039)", sep="")),
expression(paste(italic("P. obliquiloculata")," ** (",R^2,"= 0.236)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.019)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.003)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.001)", sep=""))
)
size_tmn_all <- ggplot(data_pop, aes(x=tmn_0m, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
geom_point(size = 3, position = "jitter") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_temp_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = expression("Sea surface temperature annual mean ("*~degree*"C)")) +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20),
legend.title = element_text(size=20, face="bold"), legend.position = c(.2, .75),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
### abundance
title_abund_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.126)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.092)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.055)", sep="")),
expression(paste(italic("G. siphonifera")," (",R^2,"= 0.005)", sep="")),
#expression(paste(italic("N. pachyderma")," ** (",R^2,"= 0.373)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.013)", sep="")),
expression(paste(italic("P. obliquiloculata")," (",R^2,"= 0.098)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.032)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.060)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.009)", sep=""))
)
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
geom_point(size = 3, position = "jitter") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
pdf(file = "output/size_all.pdf", paper = "special", width=16, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
} # if
overwrite=TRUE
if (!file.exists("output/size_abund_sst.pdf") | overwrite == TRUE){
# data_no0 <- data[-which(data$rel_abund == 0),]
### temperature
title_temp_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.228)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.046)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.035)", sep="")),
expression(paste(italic("G. siphonifera")," *** (",R^2,"= 0.220)", sep="")),
#expression(paste(italic("N. pachyderma")," *** (",R^2,"= 0.440)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.039)", sep="")),
expression(paste(italic("P. obliquiloculata")," ** (",R^2,"= 0.236)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.019)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.003)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.001)", sep=""))
)
size_tmn_all <- ggplot(data_pop, aes(x=tmn_0m, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
geom_point(size = 3, position = "jitter") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_temp_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = expression("Sea surface temperature annual mean ("*~degree*"C)")) +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20),
legend.title = element_text(size=20, face="bold"), legend.position = c(.2, .75),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
### abundance
title_abund_r2 <- c(
expression(paste(italic("T. sacculifer")," *** (",R^2,"= 0.126)", sep="")),
expression(paste(italic("G. ruber")," (",R^2,"= 0.092)", sep="")),
expression(paste(italic("G. conglobatus"), " (",R^2,"= 0.055)", sep="")),
expression(paste(italic("G. siphonifera")," (",R^2,"= 0.005)", sep="")),
#expression(paste(italic("N. pachyderma")," ** (",R^2,"= 0.373)", sep="")),
expression(paste(italic("N. dutertrei"), " (",R^2,"= 0.013)", sep="")),
expression(paste(italic("P. obliquiloculata")," (",R^2,"= 0.098)", sep="")),
expression(paste(italic("G. menardii"), " (",R^2,"= 0.032)", sep="")),
expression(paste(italic("G. truncatulinoides"), " (",R^2,"= 0.060)", sep="")),
expression(paste(italic("G. inflata"), " (",R^2,"= 0.009)", sep=""))
)
size_abund_all <- ggplot(data_pop, aes(x=rel_abund_median, y=pop_95q_sqrt, color = factor(species), group = factor(species))) +
geom_smooth(method = "glm", method.args = list(family = Gamma(link = "sqrt")), fill = "gray80") +
geom_point(size = 3, position = "jitter") +
scale_color_manual(values=cores10, name= c("Species"), labels = title_abund_r2 ) +
labs(y = expression(paste("Populational (95th%) shell size (",mu,m,")", sep="")),
x = "Relative Abundance (%)") +
theme(axis.text=element_text(size=22, colour = "black"), axis.title=element_text(size=22),
legend.text = element_text(size = 20, face="italic"),
legend.title = element_text(size=20, face="bold"), legend.position = c(.8, .75),
panel.background = element_rect(colour = "black", size=2),
legend.text.align = 0)
pdf(file = "output/size_all.pdf", paper = "special", width=16, height=26)
print(ggarrange(size_abund_all, size_tmn_all, ncol = 1, nrow = 2, align = "v", vjust = 0))
dev.off()
} # if
title_abrrev
title_abbrev
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./size-distrib-forams/analysis")
# setwd("/Users/marinacostarillo/Desktop")
csv_table <- read.csv(file="output/model_glm/ssp_glm_all.csv", header=TRUE, stringsAsFactors = FALSE) # species names
head(csv_table)
latex_table <- print(xtable(csv_table), include.rownames=FALSE)
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./size-distrib-forams/analysis")
# setwd("/Users/marinacostarillo/Desktop")
csv_table <- read.csv(file="output/model_glm/ssp_glm_all.csv", header=TRUE, stringsAsFactors = FALSE) # species names
head(csv_table)
latex_table <- print(xtable(csv_table), include.rownames=FALSE)
rm(list=ls())
setwd("/Users/marinacostarillo/Google Drive/PhD/Projects")
setwd("./buckley-bias/analysis")
# Libraries
source("R/library.R")
# Auxiliary functions
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
# Colours for plots
cores10 <- c("#00b900","#0037c6", "#ff7314", "#ff60ff","#86442b","#004d41", "#db0011","#00b5ff","#8000b2", "#d0be00")
# Extracting info of re-sampled sediments
morpho_size_distrib <- read.csv(file=c("data/morpho_size-distrib.csv"), header = TRUE, stringsAsFactors = FALSE)
resamples_df <- suppressWarnings(get_resamples_info(morpho_size_distrib, overwrite = FALSE)) # creates: data/resample_info.csv & data/resample_info_morpho.csv
# plot_map_resamples(resamples_df, overwrite = FALSE) # creates: output/resamples_map.pdf
files.names <- list.files(path = "data/raw_data/morpho_bias_buckley/", pattern="*.csv")
k <- files.names[15]
raw.data <- read.csv(paste("data/raw_data/morpho_bias_buckley/",k, sep=""),header = TRUE, stringsAsFactors=FALSE)
raw.data
head(raw.data )
