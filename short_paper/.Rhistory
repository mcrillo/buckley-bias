}
sim_data2 <- similarity[grep("c22", similarity$index),] # Morisita-Horn index (relative abundance, rare)
###
### Analysis GLM
###
stat_data <- sim_data2[which(sim_data2$comparison != "LGM and Holocene"), - 7]
write.csv(stat_data, "stat_comparison.csv", row.names = F)
ggplot(stat_data, aes(x=Estimate, fill=comparison)) + geom_histogram(alpha=0.5, position="identity", binwidth = 0.1)
stat_data_holo <- sim_data2[which(sim_data2$comparison != "LGM and Holocene"), - 7]
stat_data_lgm <- sim_data2[which(sim_data2$comparison != "LGM and Holocene"), - 7]
model <- glmer(data = stat_data, formula = Estimate ~ comparison +(1|sample), family = binomial)
binom.test(8, 9, p = .5, "two.sided")$p.value
###
### Historical samples plot
###
sim_data2$abs_lat <- round(abs(sim_data2$lat))
sim_data2 <- sim_data2[order(sim_data2$abs_lat),]
sim_data2$abs_lat <- round(abs(sim_data2$lat))
sim_data2$abs_lat <- as.factor(sim_data2$abs_lat)
# Morista-Horn
sim_data2$comparison <- sub(pattern = "vs.", replacement = "and", x=sim_data2$comparison)
morisita_horn <- ggplot(sim_data2, aes(x=abs_lat, y=Estimate, shape=comparison, colour=comparison)) +
geom_errorbar(position=position_dodge(width=0.5), aes(ymin=lci, ymax=uci), width=.2) +
geom_point(position=position_dodge(width=0.5), size=4.5)  + ylim(0,1) +
labs(y = "Compositional similarity", x = "Historical samples (by absolute latitude)") +
theme_bw() +
theme(plot.margin = margin(20, 5.5, 20, 5.5, "pt"),
axis.text=element_text(size=18, colour = "black"),
axis.title=element_text(size=20, colour = "black"),
legend.text = element_text(size=18, colour = "black"),
legend.title = element_blank(),
legend.position = c(0.17, 0.12),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
scale_color_manual(values=c("#a6611a", "#018571","#999999")) +
scale_shape_manual(values=c(17, 15, 19)) +
#scale_y_continuous(breaks = seq(0,1,0.25),limits=c(0,1), expand = c(0.02, 0)) +
scale_x_discrete(labels=c(expression("0.7"*degree*S),
expression("7.6"*degree*S),
expression("15.6"*degree*S),
expression("19.6"*degree*S),
expression("21.2"*degree*S),
expression("24.3"*degree*N),
expression("26.9"*degree*S),
expression("40.4"*degree*S),
expression("50"*degree*S)))
png(file = "fig_morisita-horn.png", width = 11.5, height = 7, units = "in", res = 300)
print(morisita_horn)
dev.off()
#######################
### LGM ForCenS map ###
#######################
### Data
# Finding ForCenS neigbours of LGM
if (!file.exists("LGM_ForCenS_neighbours.csv")){
forcens_lgm <- data.frame()
for(j in 1:nrow(lgm_full)){
point <- as.numeric(lgm_full[j,c("Long","Lat")])
forcens_neighb <- find_neighbours(point, findin = holocene_full[,c("Longitude","Latitude")], distance = 0)
forcens_lgm <- rbind(forcens_lgm, cbind(lgm_row = j, lgm_long = point[1], lgm_lat = point[2],
forcens_neighb, holocene_full[forcens_neighb$row_findin,]))
}
write.csv(forcens_lgm, "LGM_ForCenS_neighbours.csv", row.names = F)
}else{
forcens_lgm <- read.csv("LGM_ForCenS_neighbours.csv", header = TRUE)
}
dim(forcens_lgm)
dim(unique(forcens_lgm[,c("lgm_lat", "lgm_long", "distance")]))
unique_lgm <- unique(forcens_lgm[,c("lgm_lat", "lgm_long", "distance")])
median(unique_lgm$distance/1000) # km
### Preparing data
# Creating species datasets by calculating relative abundance
holocene_species <- (forcens_lgm[27:65]/rowSums(forcens_lgm[27:65], na.rm = T))*100
lgm_species <- (lgm_full[,c(17:52,56:58)]/rowSums(lgm_full[,c(17:52,56:58)], na.rm = T))*100
# data.frame(forcens = sort(names(forcens_lgm)[27:65]), lgm = sort(names(lgm_full)[c(17:52,56:58)]))
# Removing unidentified
holocene_species <- holocene_species[,-which(colnames(holocene_species)=="unidentified")]
lgm_species <- lgm_species[,-which(colnames(lgm_species)=="unidentified")]
# Checking if species of both datasets match
data.frame(sort(names(holocene_species)), sort(names(lgm_species)))
# Checking if holocene rows are still in the same order, after all the species corrections
# WHY? To create a 'sample' index/number for each row which will be simply the row number
# ...and why? To be able to later merge metadata (lat, long)
all(row.names(holocene_species) == row.names(forcens_lgm))
all(row.names(lgm_species) == row.names(lgm_full))
# Creating "sample" number (row number) to merge datasets
holocene_species$sample <- paste(1:nrow(holocene_species),"_holocene", sep="")
lgm_species$sample <- paste(1:nrow(lgm_species),"_lgm", sep="")
# Spade R data: species (in rows) by community (in columns) matrix
forcens_lgm <- rbind(holocene_species,lgm_species)
forcens_lgm <- melt(forcens_lgm, id = "sample")
forcens_lgm <- cast(forcens_lgm, variable~sample)
row.names(forcens_lgm) <- forcens_lgm$variable
forcens_lgm <- forcens_lgm[,-which(names(forcens_lgm)=="variable")]
forcens_lgm[1:10,1:10]
lgm_forcens_sim <- read.csv("LGM_ForCenS_c22.csv", header = TRUE)
names(lgm_forcens_sim)
dim(unique(lgm_forcens_sim[,c("Lat", "Long")]))
lgm_forcens_sim_mean <- aggregate(c22~Lat+Long, data=lgm_forcens_sim, FUN=function(x) mean=mean(x))
write.csv(lgm_forcens_sim_mean, "LGM_ForCenS_c22_mean.csv", row.names = FALSE)
# Mean similarity for each lat long grid square - NOT USED
lgm_forcens_sim <- function_name_grid(data = lgm_forcens_sim)
sim_grid_mean <- data.frame(do.call("rbind", by(lgm_forcens_sim[,c("c22","Lat","Long")], lgm_forcens_sim$grid_name, function(x) colMeans(x, na.rm = T))))
sim_grid_mean <- as.data.frame(cbind(sim_grid_mean, grid_name = row.names(sim_grid_mean)))
names(sim_grid_mean)
### Merging historical and LGM ForCenS data for plot
gradient <- c('#bd0026','#f03b20','#fd8d3c','#2b8cbe', 'black')
# Each 0.25
lgm_forcens_sim_mean$similarity <- NA
lgm_forcens_sim_mean[which(lgm_forcens_sim_mean$c22> 0.75),"similarity"] <- as.character("0.75 - 1.0")
lgm_forcens_sim_mean[which(lgm_forcens_sim_mean$c22<=0.75 & lgm_forcens_sim_mean$c22>0.5),"similarity"] <- as.character("0.5 - 0.75")
lgm_forcens_sim_mean[which(lgm_forcens_sim_mean$c22<=0.5 & lgm_forcens_sim_mean$c22>0.25),"similarity"] <- as.character("0.25 - 0.5")
lgm_forcens_sim_mean[which(lgm_forcens_sim_mean$c22< 0.25),"similarity"] <- as.character("0.0 - 0.25")
lgm_forcens_sim_mean$similarity <- as.factor(lgm_forcens_sim_mean$similarity)
lgm_forcens_sim_mean <- lgm_forcens_sim_mean[order(lgm_forcens_sim_mean$similarity, decreasing = T),]
map_data <-  lgm_forcens_sim_mean
historical$c22 <- NA
historical$similarity <- "H"
historical$point <- "Historical sample"
map_data$point <- "LGM sample"
map_data$sample <- row.names(map_data)
map_data$similarity <- as.character(map_data$similarity)
map_data <- rbind(map_data, historical[,c("sample", "c22","Lat","Long", "similarity", "point")])
map_data$point <- as.factor(map_data$point)
map_data$similarity <- as.factor(map_data$similarity)
str(map_data)
### Plotting map of geographical similarity
world <- map_data("world")
mapplot <- ggplot(world, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "grey60", colour = "grey60") +
theme_bw() + coord_fixed(1.3) +
theme(axis.text=element_text(size=16, colour = "grey60"),
axis.title=element_blank(),
axis.ticks = element_blank(),
plot.margin = margin(5.5, 5.5, 5.5, 5.5, "pt")) + # unit with the sizes of the top, right, bottom, and left margins)
scale_x_continuous(breaks = seq(-180, +180, 40), position = "bottom", limits=c(-180, 180), expand = c(0.02, 0.02),
labels=c(expression("180"*degree*W),
expression("140"*degree*W),
expression("100"*degree*W),
expression("60"*degree*W),
expression("20"*degree*W),
expression("20"*degree*E),
expression("60"*degree*E),
expression("100"*degree*E),
expression("140"*degree*E),
expression("180"*degree*E))
) +
scale_y_continuous(breaks = seq(-80,80,20),limits=c(-90,90), expand = c(0, 0),
labels=c(expression("80"*degree*S),
expression("60"*degree*S),
expression("40"*degree*S),
expression("20"*degree*S),
expression("0"*degree),
expression("20"*degree*N),
expression("40"*degree*N),
expression("60"*degree*N),
expression("80"*degree*N))
)
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)") +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 2, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)") +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.3, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 2, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)") +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.4, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 2, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
# Final Figure 1
png(file = "figure_1.png", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
# Final Figure 1
jpg(file = "figure_1.jpg", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
?jpeg
# Final Figure 1
tiff(file = "figure_1.tiff", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)") +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.45, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 2, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
# Final Figure 1
tiff(file = "figure_1.tiff", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
dev.off()
map_data$similarity
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.45, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 2, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.4, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 2, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
# Final Figure 1
tiff(file = "figure_1.tiff", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
# Final Figure 1
jpeg(file = "figure_1.jpeg", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.4, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.078),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.077),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.075),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.07),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
map_data <-  lgm_forcens_sim_mean
historical$c22 <- NA
historical$similarity <- "H"
historical$point <- "Historical"
map_data$point <- "LGM"
map_data$sample <- row.names(map_data)
map_data$similarity <- as.character(map_data$similarity)
map_data <- rbind(map_data, historical[,c("sample", "c22","Lat","Long", "similarity", "point")])
map_data$point <- as.factor(map_data$point)
map_data$similarity <- as.factor(map_data$similarity)
str(map_data)
### Plotting map of geographical similarity
world <- map_data("world")
mapplot <- ggplot(world, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "grey60", colour = "grey60") +
theme_bw() + coord_fixed(1.3) +
theme(axis.text=element_text(size=16, colour = "grey60"),
axis.title=element_blank(),
axis.ticks = element_blank(),
plot.margin = margin(5.5, 5.5, 5.5, 5.5, "pt")) + # unit with the sizes of the top, right, bottom, and left margins)
scale_x_continuous(breaks = seq(-180, +180, 40), position = "bottom", limits=c(-180, 180), expand = c(0.02, 0.02),
labels=c(expression("180"*degree*W),
expression("140"*degree*W),
expression("100"*degree*W),
expression("60"*degree*W),
expression("20"*degree*W),
expression("20"*degree*E),
expression("60"*degree*E),
expression("100"*degree*E),
expression("140"*degree*E),
expression("180"*degree*E))
) +
scale_y_continuous(breaks = seq(-80,80,20),limits=c(-90,90), expand = c(0, 0),
labels=c(expression("80"*degree*S),
expression("60"*degree*S),
expression("40"*degree*S),
expression("20"*degree*S),
expression("0"*degree),
expression("20"*degree*N),
expression("40"*degree*N),
expression("60"*degree*N),
expression("80"*degree*N))
)
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.07),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.05),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.065),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
# Final Figure 1
jpeg(file = "figure_1.jpeg", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
mappoints_all <- mapplot + geom_point(data = map_data,
aes(x = Long, y = Lat, group = sample, fill = similarity, shape = point),
color = "black", size = 4, stroke = 0.2) +
scale_fill_manual(values = gradient, name = "Compositional similarity (LGM and Holocene)",
breaks = c("0.0 - 0.25","0.25 - 0.5","0.5 - 0.75","0.75 - 1.0")) +
scale_shape_manual(values=c(24, 21), name = "Dataset") +
theme(legend.text=element_text(size=17),
legend.direction = "horizontal",
#legend.position = c(0.275, 0.078),
legend.position = c(0.5, 0.07),
legend.box = "horizontal",
legend.title = element_text(size=18),
legend.background = element_rect(linetype="solid", size = 0.4, colour ="black")) +
guides(fill = guide_legend(override.aes=list(shape=21),nrow = 1, title.position = "top", order = 2),
shape = guide_legend(override.aes = list(fill = "black"),nrow = 1, title.position = "top", order = 1))
# saving map
png(file = "map_lgm_similarity_mean.png", width = 11.5, height = 7, units = "in", res = 300)
print(mappoints_all)
dev.off()
# Final Figure 1
jpeg(file = "figure_1.jpeg", width=11.5, height=15, units = "in", res = 300)
print(ggarrange(morisita_horn, mappoints_all, ncol = 1, nrow = 2, align="v"))
dev.off()
